"""
 Print elements of a linked list on console
 head input could be None as well for empty list
 Node is defined as
 
 class Node(object):
 
   def __init__(self, data=None, next_node=None):
       self.data = data
       self.next = next_node
 
 
"""
def print_list(head):
  while head:
    print head.data
    head = head.next
  
"""
 Insert Node at the end of a linked list 
 head pointer input could be None as well for empty list
 Node is defined as
 
 class Node(object):
 
   def __init__(self, data=None, next_node=None):
       self.data = data
       self.next = next_node
 
 return back the head of the linked list in the below method
"""

def Insert(head, data):
    if head is None:
        return Node(data, None)
    else:
        temp = head
        while temp != None:
            last_node = temp
            temp = temp.next
        insert_node = Node(data, None)
        last_node.next = insert_node
        return head
        
 """
 Insert Node at a specific position in a linked list
 head input could be None as well for empty list
 Node is defined as
 
 class Node(object):
 
   def __init__(self, data=None, next_node=None):
       self.data = data
       self.next = next_node

 return back the head of the linked list in the below method. 

"""
#This is a "method-only" submission.
#You only need to complete this method.
def InsertNth(head, data, position):
    current_pos = 0
    if head is None or position == 0:
        return Node(data, head)
    else:
        temp = head
        next_node = head.next
        prev_node = head
        while current_pos != position:
            prev_node = temp
            next_node = temp.next
            temp = temp.next
            current_pos += 1
        prev_node.next = Node(data, next_node)
        return head
